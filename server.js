// --- –ù–ê–ß–ê–õ–û –§–ê–ô–õ–ê server.js (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô) ---

// server.js - v6 (ROYAL PATCH)
import express from 'express';
import Replicate from 'replicate';
import fetch from 'node-fetch';

const app = express();
app.use(express.json());
app.use(express.static('.'));

const replicate = new Replicate({ auth: process.env.REPLICATE_API_TOKEN });
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

app.post('/generate-image', async (req, res) => {
  try {
    const { prompt, negative_prompt } = req.body;
    if (!prompt) return res.status(400).json({ error: '–ü—Ä–æ–º–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.' });
    console.log(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é. –ü—Ä–æ–º–ø—Ç: "${prompt}"`);
    const model = "stability-ai/stable-diffusion:ac732df83cea7fff18b8472768c88ad041fa750ff7682a21affe81863cbe77e4";
    const input = { prompt, negative_prompt };
    const output = await replicate.run(model, { input });
    if (output && output.length > 0) {
      res.json({ imageUrl: output[0] });
    } else { throw new Error('Replicate API –Ω–µ –≤–µ—Ä–Ω—É–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.'); }
  } catch (error) {
    console.error('!!! –û–®–ò–ë–ö–ê REPLICATE:', error.message);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∫—Ä–µ–¥–∏—Ç—ã –∏–ª–∏ —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.' });
  }
});

app.post('/get-image-from-source', async (req, res) => {
    const { url } = req.body;
    if (!url) return res.status(400).json({ error: 'URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω.' });
    console.log(`–ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞: ${url}`);
    try {
        const response = await fetch(url, { headers: { 'User-Agent': 'AnimeGallery/1.0' } });
        if (!response.ok) throw new Error(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –æ—Ç ${url}: ${response.status}`);
        
        if (url.includes('waifu.im') || url.includes('waifu.pics')) {
            const data = await response.json();
            const imageUrl = data.url || (data.images && data.images[0] ? data.images[0].url : null);
            if (!imageUrl) throw new Error('API –Ω–µ –≤–µ—Ä–Ω—É–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.');
            res.json({ imageUrl: imageUrl });
        } else {
            res.json({ imageUrl: response.url });
        }
    } catch (error) {
        console.error(`!!! –û–®–ò–ë–ö–ê GET-IMAGE-FROM-SOURCE –¥–ª—è ${url}:`, error.message);
        res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞.' });
    }
});

app.post('/feedback', async (req, res) => {
    try {
        const { type, message } = req.body;
        if (!type || !message) {
            console.log('-> FEEDBACK: –ü–æ–ª—É—á–µ–Ω –Ω–µ–ø–æ–ª–Ω—ã–π –∑–∞–ø—Ä–æ—Å.');
            return res.status(400).json({ error: '–¢–∏–ø –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.' });
        }
        if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
            console.error('!!! –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –°–µ–∫—Ä–µ—Ç—ã TELEGRAM –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
            return res.status(500).json({ error: '–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–∏–µ–º–∞ –æ—Ç–∑—ã–≤–æ–≤.' });
        }
        
        console.log(`-> FEEDBACK: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram... –¢–∏–ø: ${type}`);
        const title = type === 'bug' ? 'üêû –ù–æ–≤—ã–π –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç' : 'üí° –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ';
        const text = `<b>${title}</b>\n\n<pre>${message}</pre>`;
        const telegramApiUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
        
        const tgResponse = await fetch(telegramApiUrl, {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json',
                // –î–æ–±–∞–≤–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, —á—Ç–æ–±—ã –ø—Ä–∏—Ç–≤–æ—Ä–∏—Ç—å—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
            },
            body: JSON.stringify({ chat_id: TELEGRAM_CHAT_ID, text, parse_mode: 'HTML' }),
        });
        
        console.log(`-> TELEGRAM API STATUS: ${tgResponse.status}`);
        
        // –¢–µ–ø–µ—Ä—å –º—ã –±—É–¥–µ–º –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç Telegram –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ
        if (!tgResponse.ok) {
            const responseData = await tgResponse.json().catch(() => null); // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω –Ω–µ JSON
            const errorDescription = responseData ? responseData.description : `–°—Ç–∞—Ç—É—Å ${tgResponse.status}`;
            console.error(`!!! –û–®–ò–ë–ö–ê TELEGRAM API: ${errorDescription}`, responseData);
            throw new Error(`Telegram API Error: ${errorDescription}`);
        }
        
        const responseData = await tgResponse.json();
        console.log('-> FEEDBACK: –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.', responseData);
        res.status(200).json({ success: true, message: '–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!' });
    } catch(error) {
        console.error('!!! –û–®–ò–ë–ö–ê –í–ù–£–¢–†–ò /feedback:', error.message);
        res.status(500).json({ error: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞.' });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => { console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}. –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!`); });

// --- –ö–û–ù–ï–¶ –§–ê–ô–õ–ê server.js ---